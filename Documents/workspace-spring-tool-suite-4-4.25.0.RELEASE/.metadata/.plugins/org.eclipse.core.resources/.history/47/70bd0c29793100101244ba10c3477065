<!DOCTYPE html>
<html lang="en" xmlns:th="http://www.thymeleaf.org">

<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>HMS</title>

	<!-- Bootstrap CSS -->
	<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet">
<style>
	a, u {
	  text-decoration: none;
	  color: black;
	  font-weight: lighter;
	}

    .icon-tile {
    width: 100px;
    height: 100px;
    background-color: #D5F2F8;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    transition: transform 0.3s, box-shadow 0.3s;
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
}

.icon-tile:hover {
    transform: scale(1.05);
    box-shadow: 0 8px 16px rgba(0,0,0,0.2);
}

.tile-label {
    font-weight: 500;
    color: #333;
    font-size: 1rem;
}

img.logo {
	border-radius: 10px;
	float: left;
	margin-left: 0px;
	margin-right: 10px;
	width: 50px;
	height: 50px;
}


</style>
</head>

<body style="background-color: #f5fdf4; font-family: Arial, sans-serif;">

	<!-- Navigation Bar -->
	<nav class="navbar navbar-expand-lg navbar-dark" style="background-color: #3C949E;">
		<div class="container">
			<img th:src=@{/image/Logo.png} width="50" height="50"/>
			<a class="navbar-brand" th:href="@{/}" style="color: white; font-weight: bold;">HMS</a>
			<button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
				aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
				<span class="navbar-toggler-icon"></span>
			</button>
			<div class="collapse navbar-collapse" id="navbarNav">
				<ul class="navbar-nav ms-auto">
					<li class="nav-item">
						<a class="nav-link active" th:href="@{/}" style="color: white;">Home</a>
					</li>
					<li class="nav-item">
						<a class="nav-link" th:href="@{/features}" style="color: white;">About</a>
					</li>
					<li class="nav-item">
						<a class="nav-link" th:href="@{/contact}" style="color: white;">Profile</a>
					</li>
				</ul>
			</div>
		</div>
	</nav>

<!-- Tiles Section -->
<div class="container mt-5">
    <div class="row text-center justify-content-center g-4">
        
        <!-- Tile 1 -->
        <div class="col-md-3 col-sm-6">
            <a href="/outpatient/list" class="text-decoration-none d-flex flex-column align-items-center">
                <div class="icon-tile mb-2">
                    <img th:src="@{/image/patient.png}" alt="Out Patient" width="70" height="70">
                </div>
                <span class="tile-label">Out Patient</span>
            </a>
        </div>

        <!-- Tile 2 -->
        <div class="col-md-3 col-sm-6">
            <a href="/works" class="text-decoration-none d-flex flex-column align-items-center">
                <div class="icon-tile mb-2">
                    <img th:src="@{/image/hospital.png}" alt="In Patient" width="70" height="70">
                </div>
                <span class="tile-label">In Patient</span>
            </a>
        </div>

        <!-- Tile 3 -->
        <div class="col-md-3 col-sm-6">
            <a href="/billing/list" class="text-decoration-none d-flex flex-column align-items-center">
                <div class="icon-tile mb-2">
                    <img th:src="@{/image/Billing.png}" alt="Reports" width="70" height="70">
                </div>
                <span class="tile-label">Billing</span>
            </a>
        </div>
		<div class="col-md-3 col-sm-6">
		           <a href="/master/data" class="text-decoration-none d-flex flex-column align-items-center">
		               <div class="icon-tile mb-2">
		                   <img th:src="@{/image/Master.png}" alt="Reports" width="70" height="70">
		               </div>
		               <span class="tile-label">Master</span>
		           </a>
		       </div>


    </div>
</div>


	<!-- Bootstrap JavaScript -->
	<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Chat Button -->
<button class="chat-button" onclick="toggleChat()">ðŸ’¬ Chat</button>

<!-- Chat Box -->
<div id="chatBox" class="chat-box">
    <div class="chat-header">Live Chat <button style="float:right; border:none; background:none; color:white;" onclick="toggleChat()">âœ–</button></div>
    <div class="chat-messages" id="chatMessages"></div>
    <input type="text" class="chat-input" id="chatInput" placeholder="Type a message..." onkeypress="sendMessage(event)">
</div>

<!-- JavaScript for Chat -->
<script src="https://cdn.jsdelivr.net/npm/sockjs-client@1.6.1/dist/sockjs.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/stomp.js/2.3.3/stomp.min.js"></script>
<script>
    function toggleChat() {
        let chatBox = document.getElementById("chatBox");

        if (!chatBox) {
            console.error("Chat box element not found!");
            return;
        }

        if (chatBox.style.display === "none" || chatBox.style.display === "") {
            chatBox.style.display = "block";
        } else {
            chatBox.style.display = "none";
        }
    }
</script>

<script>
	let stompClient = null;
	let username = "User"; // Default sender name

	function connect() {
	    let socket = new SockJS('/ws');
	    stompClient = Stomp.over(socket);
	    
	    stompClient.connect({}, function () {
	        console.log("Connected to WebSocket");

	        // Subscribe to new messages
	        stompClient.subscribe('/topic/public', function (message) {
	            showMessage(JSON.parse(message.body));
	        });

	        // Fetch old messages when connecting
	        fetch('/chat/history') 
	            .then(response => response.json())
	            .then(messages => {
	                messages.forEach(showMessage); // Display previous messages
	            })
	            .catch(error => console.error("Error fetching old messages:", error));
	    });
	}



	function showMessage(message) {
	    let chatMessages = document.getElementById("chatMessages");

	    // Avoid duplicate messages
	    let existingMessages = chatMessages.innerHTML;
	    if (existingMessages.includes(message.content)) return;

	    let sender = message.sender ? `<b>${message.sender}:</b> ` : "";
	    chatMessages.innerHTML += `<div>${sender}${message.content}</div>`;
	    chatMessages.scrollTop = chatMessages.scrollHeight;
	}


	function sendMessage(event) {
	    if (event.key === "Enter") {
	        let messageContent = document.getElementById("chatInput").value;

	        if (messageContent.trim() !== "") {
	            if (!stompClient || !stompClient.connected) {
	                console.error("WebSocket is not connected!");
	                return;
	            }

	            let chatMessage = {
	                sender: username, 
	                content: messageContent,
	                messagetype: "CHAT"
	            };

	            stompClient.send("/app/chat.send", {}, JSON.stringify(chatMessage));
	            document.getElementById("chatInput").value = ""; // Clear input
	        }
	    }
	}

	document.addEventListener("DOMContentLoaded", function () {
	    connect();
	    document.getElementById("chatBox").style.display = "none";
	});
	
	function fetchChatHistory() {
	    fetch('/chat/history')
	        .then(response => {
	            if (!response.ok) {
	                throw new Error("Failed to fetch messages");
	            }
	            return response.json();
	        })
	        .then(messages => {
	            console.log("Loaded messages:", messages);
	            if (messages.length > 0) {
	                messages.forEach(showMessage);
	            }
	        })
	        .catch(error => console.error("Error fetching chat history:", error));
	}


	document.addEventListener("DOMContentLoaded", function () {
	    fetchChatHistory();
	    connect();
	});



</script>




<!-- CSS for Chat -->
<style>
    /* Floating Chat Button */
    .chat-button {
        position: fixed;
        bottom: 20px;
        right: 20px;
        background-color: #3C949E;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 50px;
        font-size: 16px;
        cursor: pointer;
        box-shadow: 2px 2px 10px rgba(0,0,0,0.3);
    }

    .chat-button:hover {
        background-color: #2C7B88;
    }

    /* Chat Box */
   /* Chat Box */
.chat-box {
    position: fixed;
    bottom: 80px;
    right: 20px;
    width: 300px;
    height: 350px;
    background-color: white;
    border-radius: 10px;
    box-shadow: 2px 2px 10px rgba(0,0,0,0.3);
    padding: 10px;
    display: none; /* Hides chat box initially */
    transition: opacity 0.3s ease, visibility 0.3s ease;
}

.chat-button {
    position: fixed;
    bottom: 20px;
    right: 20px;
    background-color: #3C949E;
    color: white;
    border: none;
    padding: 10px 20px;
    border-radius: 50px;
    font-size: 16px;
    cursor: pointer;
    box-shadow: 2px 2px 10px rgba(0,0,0,0.3);
}

.chat-box {
    position: fixed;
    bottom: 80px;
    right: 20px;
    width: 300px;
    height: 350px;
    background-color: white;
    border-radius: 10px;
    box-shadow: 2px 2px 10px rgba(0,0,0,0.3);
    padding: 10px;
    display: none;
}


</style>

</body>

</html>